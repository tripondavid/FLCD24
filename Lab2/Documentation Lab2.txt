Implementation - HashNode
The HashNode contains a key, a value and a reference to the next HashNode.
The key is the identifier/constant and the value is the position from the SymbolTable.

Implementation - HashTable
The HashTable has a List of HashNodes, size and capacity.
For the hashcode, it is used the sum of ASCII chars % capacity.

Operations:
-put(key, value) -> this operation extends the list to the needed capacity and maps the specified key to the specified value, or returns the value if the key already exists
-get(key) -> returns the value to which the specified key is mapped, or null if there is no mapping

Implementation - SymbolTable
The SymbolTable has a HashTable and the SymbolTable available position. The key is the symbol and the value is the position.

Operations:
-add(key) -> add key to ST or return the position of the key if it is already existent
-get(key) -> return the position in the ST